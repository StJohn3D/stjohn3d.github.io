{"version":3,"sources":["navigation/AppHeader.tsx","navigation/AppFooter.tsx","components/Content.tsx","pages/Home/Home.tsx","serviceWorker.js","index.tsx","App.tsx"],"names":["AppHeader","withRouter","props","isHome","location","pathname","react_default","a","createElement","className","classNames","App-header","home","alt","src","react_router_dom","to","AppFooter","Fragment","index_es","icon","faGrinBeam","size","href","title","faLinkedin","faGithub","faTwitter","faStackOverflow","faNpm","faVimeo","faTwitch","Content","children","Home","Content_Content","faCog","faWrench","flip","Boolean","window","hostname","match","ReactDOM","render","react_router","exact","path","component","AppFooter_AppFooter","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.bd24678f.chunk.js","sourcesContent":["import React from 'react'\nimport { withRouter, NavLink, Link } from 'react-router-dom'\nimport classNames from 'classnames'\n\nexport const AppHeader = withRouter(props => {\n  const isHome = props.location.pathname === \"/\"\n  return (\n    <header className={classNames({ \"App-header\": true, \"home\": isHome })}>\n      <img className=\"selfie\" alt=\"Picture of St. John\" src=\"https://www.gravatar.com/avatar/845122333bf6c244096538e0df542248?s=200\" />\n      <Link to=\"/\" className=\"App-home-link\"><h3>StJohn3D</h3></Link>\n      {/* <nav className=\"App-nav\">\n        <NavLink to=\"/blog\" className=\"App-link\">blog</NavLink>\n        <NavLink to=\"/media\" className=\"App-link\">Media</NavLink>\n        <NavLink to=\"/contact\" className=\"App-link\">Contact</NavLink>\n      </nav> */}\n    </header>\n  )\n})\n","import React from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faGrinBeam } from '@fortawesome/free-solid-svg-icons'\nimport { faNpm, faLinkedin, faStackOverflow, faYoutube, faVimeo, faGithub, faTwitter, faTwitch } from '@fortawesome/free-brands-svg-icons'\n\nexport const AppFooter = () => (<>\n  <br />\n  <FontAwesomeIcon icon={faGrinBeam} size=\"2x\" />\n  <br /> <br />\n  ~ Open Source and Social links ~\n  <footer className=\"footer-links\">\n    <a href=\"https://www.linkedin.com/in/stjohnpeaster/\" title=\"Linked In\"><FontAwesomeIcon icon={faLinkedin} size=\"2x\" /></a>\n    <a href=\"https://github.com/StJohn3D\" title=\"Git Hub\"><FontAwesomeIcon icon={faGithub} size=\"2x\" /></a>\n    <a href=\"https://mobile.twitter.com/StJohn3D\" title=\"Twitter\"><FontAwesomeIcon icon={faTwitter} size=\"2x\" /></a>\n    <a href=\"https://stackoverflow.com/users/5900250/stjohn3d\" title=\"Stack Overflow\"><FontAwesomeIcon icon={faStackOverflow} size=\"2x\" /></a>\n    <a href=\"https://www.npmjs.com/~stjohn3d\" title=\"npm\"><FontAwesomeIcon icon={faNpm} size=\"2x\" /></a>\n    <a href=\"https://vimeo.com/stjohn3d/videos/appears/sort:date\" title=\"Vimeo\"><FontAwesomeIcon icon={faVimeo} size=\"2x\" /></a>\n    {/* <a href=\"https://www.youtube.com/channel/UCM12bKTjKcR3DpnpVHXDQig\" title=\"You Tube\"><FontAwesomeIcon icon={faYoutube} size=\"2x\" /></a> */}\n    <a href=\"https://www.twitch.tv/stjohn3d\" title=\"Twitch\"><FontAwesomeIcon icon={faTwitch} size=\"2x\" /></a>\n  </footer>\n</>)\n","import React from 'react'\nimport './Content.scss'\n\nexport const Content = (props: any) => {\n  return (\n    <article className=\"App-content\">\n      {props.children}\n    </article>\n  )\n}","import React from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faWrench, faCog, faShareAlt, faGrinBeam } from '@fortawesome/free-solid-svg-icons'\nimport { Content } from '../../components/Content'\n\nexport const Home = () => {\n  return (\n    <Content>\n      A personal site by <a href=\"https://mobile.twitter.com/StJohn3D\" >St. John Peaster</a>.\n      <br />\n      Code • Art • Games\n      <br /><br />\n      <FontAwesomeIcon icon={faCog} size=\"2x\" />\n      <br /><br />\n      <FontAwesomeIcon icon={faWrench} flip=\"horizontal\" />{' '}\n      This site is largely a work in progress being built in spare-time.\n      {' '}<FontAwesomeIcon icon={faWrench} />\n    </Content>\n  )\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { App } from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport { AppHeader, AppFooter } from './navigation'\nimport { Home } from './pages/Home'\n// import { Blog } from './pages/Blog'\n// import { Media } from './pages/Media'\n// import { Contact } from './pages/Contact'\nimport './App.scss'\n\n\n\nexport const App = () => {\n  return (\n    <Router>\n      <div className=\"App\">\n        <AppHeader />\n        <hr />\n        <Route exact path=\"/\" component={Home} />\n        {/* <Route path=\"/blog\" component={Blog} />\n        <Route path=\"/media\" component={Media} />\n        <Route path=\"/contact\" component={Contact} /> */}\n        <AppFooter />\n      </div>\n    </Router>\n  );\n}\n"],"sourceRoot":""}